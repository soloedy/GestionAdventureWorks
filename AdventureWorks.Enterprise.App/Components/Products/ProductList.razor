@using AdventureWorks.Enterprise.App.Models
@using AdventureWorks.Enterprise.App.Services
@inject ApiService ApiService
@inject NavigationManager Navigation
@rendermode InteractiveServer

@page "/products"

<PageTitle>Productos - Producción</PageTitle>

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title">Lista de Productos</h5>
        <button class="btn btn-primary" @onclick="NavigateToCreateProduct">Crear Producto</button>
    </div>
    <div class="card-body">
        @if (IsLoading)
        {
            <div class="d-flex justify-content-center my-4">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Cargando...</span>
                </div>
            </div>
        }
        else if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger">@ErrorMessage</div>
        }
        else if (Products.Count == 0)
        {
            <div class="alert alert-info">No hay productos registrados.</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>Nombre</th>
                            <th>Número</th>
                            <th>Color</th>
                            <th>Precio</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var prod in Products)
                        {
                            <tr>
                                <td>@prod.ProductID</td>
                                <td>
                                    <a href="@($"/product-view/{prod.ProductID}")" class="text-primary text-decoration-none">@prod.Name</a>
                                </td>
                                <td>@prod.ProductNumber</td>
                                <td>@prod.Color</td>
                                <td>@prod.ListPrice.ToString("C")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@code {
    private List<ProductReadDto> Products = new();
    private bool IsLoading = true;
    private string ErrorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        IsLoading = true;
        ErrorMessage = string.Empty;
        var result = await ApiService.FncGetAllProductsAsync();
        if (result.Status && result.Data != null)
        {
            Products = result.Data;
        }
        else
        {
            ErrorMessage = result.Message;
        }
        IsLoading = false;
    }

    private void NavigateToCreateProduct()
    {
        Navigation.NavigateTo("/create-product");
    }
}
