@using AdventureWorks.Enterprise.App.Models
@using AdventureWorks.Enterprise.App.Services
@using AdventureWorks.Enterprise.App.Components.Common
@inject ApiService ApiService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title">Lista de Empleados</h5>
        <button class="btn btn-primary" @onclick="OnNavigateToCreate">Crear Nuevo Empleado</button>
    </div>
    <div class="card-body">
        @if (IsLoading)
        {
            <div class="d-flex justify-content-center my-4">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Cargando...</span>
                </div>
            </div>
        }
        else if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger">@ErrorMessage</div>
        }
        else if (Employees.Count == 0)
        {
            <div class="alert alert-info">No hay empleados registrados.</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>Nombre</th>
                            <th>Puesto</th>
                            <th>Fecha de Contratación</th>
                            <th>Estado</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var emp in Employees)
                        {
                            <tr>
                                <td>@emp.IntBusinessEntityID</td>
                                <td>
                                    <a href="/employee/@emp.IntBusinessEntityID" class="text-decoration-none">
                                        @emp.StrFullName
                                    </a>
                                </td>
                                <td>@emp.StrJobTitle</td>
                                <td>@emp.DtmHireDate.ToString("dd/MM/yyyy")</td>
                                <td>
                                    @if (emp.BlnCurrentFlag)
                                    {
                                        <span class="badge bg-success">Activo</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Inactivo</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public EventCallback OnNavigateToCreate { get; set; }
    [Parameter]
    public EventCallback OnNavigateToEdit { get; set; }
    [Parameter]
    public EventCallback OnNavigateToView { get; set; }

    private List<EmployeeFullReadDto> Employees = new();
    private bool IsLoading = true;
    private string ErrorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadEmployees();
    }

    private async Task LoadEmployees()
    {
        IsLoading = true;
        ErrorMessage = string.Empty;
        StateHasChanged();
        var result = await ApiService.FncGetAllEmployeesAsync();
        if (result.Status && result.Data != null)
        {
            Employees = result.Data;
        }
        else
        {
            ErrorMessage = result.Message;
        }
        IsLoading = false;
        StateHasChanged();
    }
}